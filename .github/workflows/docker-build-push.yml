name: Build, Push Docker Image and Deploy Flask Python API to AWS

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: omoi/njm-tech-api:latest

  AWS_DIR: ~/docker/apps/njm-tech-api
  AWS_SERVER: ${{ secrets.AWS_SERVER }}
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}

  PYTHON_ENV: ${{ secrets.PYTHON_ENV }}

  FLASK_APP: ${{ secrets.FLASK_APP }}
  FLASK_ENV: ${{ secrets.FLASK_ENV }}
  FLASK_DEBUG: ${{ secrets.FLASK_DEBUG }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
          --build-arg PYTHON_ENV=${{ env.PYTHON_ENV }} \
          --build-arg FLASK_APP=${{ env.FLASK_APP }} \
          --build-arg FLASK_ENV=${{ env.FLASK_ENV }} \
          --build-arg FLASK_DEBUG=${{ env.FLASK_DEBUG }} \
          -t ${{ env.DOCKER_IMAGE }} .

      - name: Push Docker Image
        run: docker push ${{ env.DOCKER_IMAGE }}

    # - name: Deploy to AWS server
    #   run: |
    #     echo "${{ env.AWS_SSH_KEY }}" > key.pem
    #     chmod 400 key.pem
    #     scp -P 615 -i key.pem docker-compose.yml omoi@${{ env.AWS_SERVER }}:${{ env.AWS_DIR }}
    #     ssh -i key.pem -p 615 -o StrictHostKeyChecking=no omoi@${{ env.AWS_SERVER }} 'cd ${{ env.AWS_DIR }} && docker-compose down && docker-compose pull && docker-compose up -d'
